#ifndef __S2_METRICS_H__
#define __S2_METRICS_H__



/*
* STRUCTURE S2_Metrics__QUEUEDEVENT
*/
#define QUEUEDEVENT__S2_Metrics_USERORSYSTEM_STRING_MAX_LEN 15
#define QUEUEDEVENT__S2_Metrics_HEADER1_STRING_MAX_LEN 1024
#define QUEUEDEVENT__S2_Metrics_HEADER2_STRING_MAX_LEN 1024
#define QUEUEDEVENT__S2_Metrics_HEADER3_STRING_MAX_LEN 1024
#define QUEUEDEVENT__S2_Metrics_HEADER4_STRING_MAX_LEN 1024
#define QUEUEDEVENT__S2_Metrics_HEADER5_STRING_MAX_LEN 1024
#define QUEUEDEVENT__S2_Metrics_HEADER6_STRING_MAX_LEN 1024
#define QUEUEDEVENT__S2_Metrics_INNERMSG1_STRING_MAX_LEN 1024
#define QUEUEDEVENT__S2_Metrics_INNERMSG2_STRING_MAX_LEN 1024
#define QUEUEDEVENT__S2_Metrics_INNERMSG3_STRING_MAX_LEN 1024
#define QUEUEDEVENT__S2_Metrics_INNERMSG4_STRING_MAX_LEN 1024
START_STRUCTURE_DEFINITION( S2_Metrics, QUEUEDEVENT )
{
   CREATE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__USERORSYSTEM, QUEUEDEVENT__S2_Metrics_USERORSYSTEM_STRING_MAX_LEN );
   DECLARE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__USERORSYSTEM );
   CREATE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER1, QUEUEDEVENT__S2_Metrics_HEADER1_STRING_MAX_LEN );
   DECLARE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER1 );
   CREATE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER2, QUEUEDEVENT__S2_Metrics_HEADER2_STRING_MAX_LEN );
   DECLARE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER2 );
   CREATE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER3, QUEUEDEVENT__S2_Metrics_HEADER3_STRING_MAX_LEN );
   DECLARE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER3 );
   CREATE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER4, QUEUEDEVENT__S2_Metrics_HEADER4_STRING_MAX_LEN );
   DECLARE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER4 );
   CREATE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER5, QUEUEDEVENT__S2_Metrics_HEADER5_STRING_MAX_LEN );
   DECLARE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER5 );
   CREATE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER6, QUEUEDEVENT__S2_Metrics_HEADER6_STRING_MAX_LEN );
   DECLARE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__HEADER6 );
   CREATE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__INNERMSG1, QUEUEDEVENT__S2_Metrics_INNERMSG1_STRING_MAX_LEN );
   DECLARE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__INNERMSG1 );
   CREATE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__INNERMSG2, QUEUEDEVENT__S2_Metrics_INNERMSG2_STRING_MAX_LEN );
   DECLARE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__INNERMSG2 );
   CREATE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__INNERMSG3, QUEUEDEVENT__S2_Metrics_INNERMSG3_STRING_MAX_LEN );
   DECLARE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__INNERMSG3 );
   CREATE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__INNERMSG4, QUEUEDEVENT__S2_Metrics_INNERMSG4_STRING_MAX_LEN );
   DECLARE_STRING_STRUCT( S2_Metrics, QUEUEDEVENT__INNERMSG4 );
};


/*
* Constructor and Destructor
*/
int S2_Metrics_QUEUEDEVENT_Constructor ( START_STRUCTURE_DEFINITION( S2_Metrics, QUEUEDEVENT ) * me, int nVerbose );
int S2_Metrics_QUEUEDEVENT_Destructor ( START_STRUCTURE_DEFINITION( S2_Metrics, QUEUEDEVENT ) * me, int nVerbose );

/*
* DIGITAL_INPUT
*/
#define __S2_Metrics_STARTUP_PRESS_DIG_INPUT 0
#define __S2_Metrics_CONFIRM_SYSTEM_OFF_DIG_INPUT 1
#define __S2_Metrics_CLIENTCONNECTED_DIG_INPUT 2
#define __S2_Metrics_SYSTEMREADY_DIG_INPUT 3


/*
* ANALOG_INPUT
*/

#define __S2_Metrics_DMPSHOSTNAME_STRING_INPUT 0
#define __S2_Metrics_DMPSHOSTNAME_STRING_MAX_LEN 32
CREATE_STRING_STRUCT( S2_Metrics, __DMPSHOSTNAME, __S2_Metrics_DMPSHOSTNAME_STRING_MAX_LEN );
#define __S2_Metrics_DMPSIP_STRING_INPUT 1
#define __S2_Metrics_DMPSIP_STRING_MAX_LEN 15
CREATE_STRING_STRUCT( S2_Metrics, __DMPSIP, __S2_Metrics_DMPSIP_STRING_MAX_LEN );

#define __S2_Metrics_CLIENTBUFFER_BUFFER_INPUT 2
#define __S2_Metrics_CLIENTBUFFER_BUFFER_MAX_LEN 100
CREATE_STRING_STRUCT( S2_Metrics, __CLIENTBUFFER, __S2_Metrics_CLIENTBUFFER_BUFFER_MAX_LEN );


/*
* DIGITAL_OUTPUT
*/
#define __S2_Metrics__CLIENTCONNECTED_DIG_OUTPUT 0


/*
* ANALOG_OUTPUT
*/

#define __S2_Metrics_TOCLIENTBUFFER$_STRING_OUTPUT 0


/*
* Direct Socket Variables
*/

#define __S2_Metrics_CLIENT_SOCKET 3
#define __S2_Metrics_CLIENT_STRING_MAX_LEN 1024
START_SOCKET_DEFINITION( S2_Metrics, __CLIENT )
{
   int SocketStatus;
   enum ESplusSocketType eSocketType;
   int SocketID;
   void *SocketPtr;
CREATE_SOCKET_STRING( S2_Metrics, SocketRxBuf, __S2_Metrics_CLIENT_STRING_MAX_LEN );
};



/*
* INTEGER_PARAMETER
*/
/*
* SIGNED_INTEGER_PARAMETER
*/
/*
* LONG_INTEGER_PARAMETER
*/
/*
* SIGNED_LONG_INTEGER_PARAMETER
*/
/*
* INTEGER_PARAMETER
*/
/*
* SIGNED_INTEGER_PARAMETER
*/
/*
* LONG_INTEGER_PARAMETER
*/
/*
* SIGNED_LONG_INTEGER_PARAMETER
*/
/*
* STRING_PARAMETER
*/


/*
* INTEGER
*/


/*
* LONG_INTEGER
*/


/*
* SIGNED_INTEGER
*/


/*
* SIGNED_LONG_INTEGER
*/


/*
* STRING
*/
#define __S2_Metrics_REPORTINGHOST_STRING_MAX_LEN 30
CREATE_STRING_STRUCT( S2_Metrics, __REPORTINGHOST, __S2_Metrics_REPORTINGHOST_STRING_MAX_LEN );
#define __S2_Metrics_HOSTNAME_STRING_MAX_LEN 30
CREATE_STRING_STRUCT( S2_Metrics, __HOSTNAME, __S2_Metrics_HOSTNAME_STRING_MAX_LEN );
#define __S2_Metrics_HOSTIP_STRING_MAX_LEN 15
CREATE_STRING_STRUCT( S2_Metrics, __HOSTIP, __S2_Metrics_HOSTIP_STRING_MAX_LEN );
#define __S2_Metrics_MESSAGE_STRING_MAX_LEN 65534
CREATE_STRING_STRUCT( S2_Metrics, __MESSAGE, __S2_Metrics_MESSAGE_STRING_MAX_LEN );

/*
* STRUCTURE
*/

START_GLOBAL_VAR_STRUCT( S2_Metrics )
{
   void* InstancePtr;
   struct GenericOutputString_s sGenericOutStr;
   unsigned short LastModifiedArrayIndex;

   unsigned short __REPORTINGHOSTPORT;
   short __CONFIGFILEHANDLE;
   DECLARE_STRING_STRUCT( S2_Metrics, __REPORTINGHOST );
   DECLARE_STRING_STRUCT( S2_Metrics, __HOSTNAME );
   DECLARE_STRING_STRUCT( S2_Metrics, __HOSTIP );
   DECLARE_STRING_STRUCT( S2_Metrics, __MESSAGE );
   DECLARE_STRING_STRUCT( S2_Metrics, __DMPSHOSTNAME );
   DECLARE_STRING_STRUCT( S2_Metrics, __DMPSIP );
   DECLARE_STRING_STRUCT( S2_Metrics, __CLIENTBUFFER );
   DECLARE_SOCKET( S2_Metrics, __CLIENT );
};

START_NVRAM_VAR_STRUCT( S2_Metrics )
{
};



#endif //__S2_METRICS_H__

